# Generated by Django 4.2.7 on 2025-09-04 09:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.CharField(help_text='Patient ID from patients app (PAT123, etc.)', max_length=20)),
                ('patient_name', models.CharField(help_text='Patient name cached for performance', max_length=100)),
                ('chief_complaint', models.TextField(help_text='Main reason for visit')),
                ('symptoms', models.TextField(help_text='Patient symptoms and history')),
                ('examination_findings', models.TextField(blank=True, help_text='Physical examination results', null=True)),
                ('diagnosis', models.TextField(help_text='Medical diagnosis')),
                ('treatment_plan', models.TextField(help_text='Treatment recommendations')),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('NORMAL', 'Normal'), ('URGENT', 'Urgent'), ('EMERGENCY', 'Emergency')], default='NORMAL', max_length=20)),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'Consultation In Progress'), ('COMPLETED', 'Consultation Completed'), ('FOLLOW_UP_REQUIRED', 'Follow-up Required'), ('REFERRED', 'Referred to Specialist')], default='IN_PROGRESS', max_length=20)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='Temperature in Celsius', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(30.0), django.core.validators.MaxValueValidator(50.0)])),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(300)])),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(200)])),
                ('heart_rate', models.IntegerField(blank=True, help_text='Heart rate per minute', null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(200)])),
                ('consultation_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('doctor_notes', models.TextField(blank=True, help_text='Private notes for doctor', null=True)),
                ('doctor', models.ForeignKey(limit_choices_to={'role': 'DOCTOR'}, on_delete=django.db.models.deletion.PROTECT, related_name='consultations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'consultations',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('medication_name', models.CharField(max_length=200)),
                ('generic_name', models.CharField(blank=True, help_text='Generic medication name', max_length=200, null=True)),
                ('strength', models.CharField(help_text='e.g., 500mg, 250ml', max_length=50)),
                ('dosage_form', models.CharField(help_text='e.g., tablet, capsule, syrup', max_length=50)),
                ('frequency', models.CharField(choices=[('ONCE_DAILY', 'Once Daily'), ('TWICE_DAILY', 'Twice Daily'), ('THREE_TIMES_DAILY', 'Three Times Daily'), ('FOUR_TIMES_DAILY', 'Four Times Daily'), ('AS_NEEDED', 'As Needed'), ('CUSTOM', 'Custom Schedule')], max_length=20)),
                ('custom_frequency', models.CharField(blank=True, help_text='Custom frequency if not in standard choices', max_length=100, null=True)),
                ('dosage_instructions', models.TextField(help_text='How to take the medication')),
                ('duration', models.CharField(help_text='e.g., 7 days, 2 weeks', max_length=50)),
                ('quantity_prescribed', models.IntegerField(help_text='Total quantity prescribed', validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity_dispensed', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('PRESCRIBED', 'Prescribed'), ('DISPENSED', 'Dispensed'), ('PARTIALLY_DISPENSED', 'Partially Dispensed'), ('CANCELLED', 'Cancelled')], default='PRESCRIBED', max_length=20)),
                ('special_instructions', models.TextField(blank=True, help_text='Special instructions for patient or pharmacist', null=True)),
                ('prescribed_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dispensed_at', models.DateTimeField(blank=True, null=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='doctor.consultation')),
                ('dispensed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prescriptions_dispensed', to=settings.AUTH_USER_MODEL)),
                ('prescribed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prescriptions_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'prescriptions',
                'ordering': ['-prescribed_at'],
                'indexes': [models.Index(fields=['consultation'], name='prescriptio_consult_82e09d_idx'), models.Index(fields=['status', '-prescribed_at'], name='prescriptio_status_e089a2_idx'), models.Index(fields=['medication_name'], name='prescriptio_medicat_a8b140_idx')],
            },
        ),
        migrations.CreateModel(
            name='LabTestRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_type', models.CharField(choices=[('BLOOD_TEST', 'Blood Test'), ('URINE_TEST', 'Urine Test'), ('STOOL_TEST', 'Stool Test'), ('XRAY', 'X-Ray'), ('ULTRASOUND', 'Ultrasound'), ('ECG', 'ECG'), ('BLOOD_SUGAR', 'Blood Sugar Test'), ('MALARIA_TEST', 'Malaria Test'), ('HIV_TEST', 'HIV Test'), ('OTHER', 'Other Test')], max_length=20)),
                ('test_description', models.TextField(help_text='Specific test requirements')),
                ('urgency', models.CharField(choices=[('NORMAL', 'Normal'), ('URGENT', 'Urgent'), ('STAT', 'STAT (Immediate)')], default='NORMAL', max_length=10)),
                ('status', models.CharField(choices=[('REQUESTED', 'Test Requested'), ('IN_PROGRESS', 'Test In Progress'), ('COMPLETED', 'Test Completed'), ('CANCELLED', 'Test Cancelled')], default='REQUESTED', max_length=15)),
                ('clinical_notes', models.TextField(blank=True, help_text='Clinical information for lab technician', null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_requests', to='doctor.consultation')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lab_requests_processed', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lab_requests_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lab_test_requests',
                'ordering': ['-requested_at'],
                'indexes': [models.Index(fields=['consultation'], name='lab_test_re_consult_5f76d5_idx'), models.Index(fields=['status', '-requested_at'], name='lab_test_re_status_94fd48_idx'), models.Index(fields=['urgency', '-requested_at'], name='lab_test_re_urgency_facf41_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['patient_id'], name='consultatio_patient_fe04c5_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['doctor', '-consultation_date'], name='consultatio_doctor__372ab9_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['status', '-consultation_date'], name='consultatio_status_2429af_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['consultation_date'], name='consultatio_consult_98081f_idx'),
        ),
    ]
