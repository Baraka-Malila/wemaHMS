# Generated by Django 4.2.7 on 2025-09-04 09:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.CharField(help_text='Auto-generated format: PAT001', max_length=6, unique=True, validators=[django.core.validators.RegexValidator(message='Patient ID must be in format: PAT001', regex='^PAT[0-9]{3}$')])),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(help_text='Primary contact number', max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be valid format (9-15 digits)', regex='^\\+?1?\\d{9,15}$')])),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be valid format (9-15 digits)', regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField(blank=True, null=True)),
                ('tribe', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(999.99)])),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in cm', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(30.0), django.core.validators.MaxValueValidator(300.0)])),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A Positive'), ('A-', 'A Negative'), ('B+', 'B Positive'), ('B-', 'B Negative'), ('O+', 'O Positive'), ('O-', 'O Negative'), ('AB+', 'AB Positive'), ('AB-', 'AB Negative'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('allergies', models.TextField(blank=True, help_text='Known allergies (medications, foods, etc.)', null=True)),
                ('chronic_conditions', models.TextField(blank=True, help_text='Diabetes, hypertension, etc.', null=True)),
                ('file_fee_paid', models.BooleanField(default=False)),
                ('file_fee_amount', models.DecimalField(decimal_places=2, default=2000.0, help_text='File creation fee in TZS', max_digits=10)),
                ('file_fee_payment_date', models.DateTimeField(blank=True, null=True)),
                ('current_status', models.CharField(choices=[('REGISTERED', 'Just Registered'), ('WAITING_DOCTOR', 'Waiting for Doctor'), ('WITH_DOCTOR', 'Currently with Doctor'), ('WAITING_LAB', 'Waiting for Lab Tests'), ('IN_LAB', 'Currently in Laboratory'), ('LAB_RESULTS_READY', 'Lab Results Ready'), ('WAITING_PHARMACY', 'Waiting for Pharmacy'), ('IN_PHARMACY', 'Currently in Pharmacy'), ('PAYMENT_PENDING', 'Payment Required'), ('COMPLETED', 'Visit Completed'), ('DISCHARGED', 'Discharged')], default='REGISTERED', max_length=20)),
                ('current_location', models.CharField(blank=True, help_text='Current department or staff member handling patient', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Staff member who registered this patient', on_delete=django.db.models.deletion.PROTECT, related_name='registered_patients', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_patients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'patients',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('note_type', models.CharField(choices=[('GENERAL', 'General Note'), ('CONTACT', 'Contact Update'), ('PAYMENT', 'Payment Note'), ('ADMINISTRATIVE', 'Administrative Note')], default='GENERAL', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='patient_notes', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='patients.patient')),
            ],
            options={
                'db_table': 'patient_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('previous_status', models.CharField(blank=True, choices=[('REGISTERED', 'Just Registered'), ('WAITING_DOCTOR', 'Waiting for Doctor'), ('WITH_DOCTOR', 'Currently with Doctor'), ('WAITING_LAB', 'Waiting for Lab Tests'), ('IN_LAB', 'Currently in Laboratory'), ('LAB_RESULTS_READY', 'Lab Results Ready'), ('WAITING_PHARMACY', 'Waiting for Pharmacy'), ('IN_PHARMACY', 'Currently in Pharmacy'), ('PAYMENT_PENDING', 'Payment Required'), ('COMPLETED', 'Visit Completed'), ('DISCHARGED', 'Discharged')], max_length=20, null=True)),
                ('new_status', models.CharField(choices=[('REGISTERED', 'Just Registered'), ('WAITING_DOCTOR', 'Waiting for Doctor'), ('WITH_DOCTOR', 'Currently with Doctor'), ('WAITING_LAB', 'Waiting for Lab Tests'), ('IN_LAB', 'Currently in Laboratory'), ('LAB_RESULTS_READY', 'Lab Results Ready'), ('WAITING_PHARMACY', 'Waiting for Pharmacy'), ('IN_PHARMACY', 'Currently in Pharmacy'), ('PAYMENT_PENDING', 'Payment Required'), ('COMPLETED', 'Visit Completed'), ('DISCHARGED', 'Discharged')], max_length=20)),
                ('previous_location', models.CharField(blank=True, max_length=100, null=True)),
                ('new_location', models.CharField(blank=True, max_length=100, null=True)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='patient_status_changes', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='patients.patient')),
            ],
            options={
                'db_table': 'patient_status_history',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['patient', '-changed_at'], name='patient_sta_patient_5d40bc_idx'), models.Index(fields=['new_status', '-changed_at'], name='patient_sta_new_sta_d129bc_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['patient_id'], name='patients_patient_e63b14_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['phone_number'], name='patients_phone_n_eba9eb_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['full_name'], name='patients_full_na_4556a3_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['current_status'], name='patients_current_cab901_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['created_at'], name='patients_created_b2d3e4_idx'),
        ),
    ]
