# Generated by Django 4.2.7 on 2025-09-07 06:41

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('finance', '0002_populate_service_pricing'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Category name (e.g., Staff Salaries, Medical Supplies)', max_length=100)),
                ('category_type', models.CharField(choices=[('STAFF', 'Staff & Payroll'), ('MEDICAL', 'Medical Supplies'), ('UTILITIES', 'Utilities & Services'), ('EQUIPMENT', 'Equipment & Maintenance'), ('OFFICE', 'Office Supplies'), ('TRANSPORT', 'Transport & Fuel'), ('TRAINING', 'Training & Development'), ('OTHER', 'Other Expenses')], max_length=20)),
                ('description', models.TextField(blank=True, help_text='What expenses belong in this category', null=True)),
                ('monthly_budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly budget allocation for this category', max_digits=12)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'expense_categories',
                'ordering': ['category_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StaffSalary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('salary_month', models.DateField(help_text='Month this salary is for (YYYY-MM-01 format)')),
                ('basic_salary', models.DecimalField(decimal_places=2, help_text='Basic monthly salary', max_digits=10)),
                ('allowances', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Transport, medical, housing allowances', max_digits=10)),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Overtime payments', max_digits=10)),
                ('deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax, PAYE, loan deductions, etc.', max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, help_text='Final amount to be paid', max_digits=10)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('PARTIAL', 'Partially Paid'), ('ON_HOLD', 'On Hold')], default='PENDING', max_length=15)),
                ('payment_date', models.DateField(blank=True, help_text='Date salary was paid', null=True)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque'), ('MOBILE_MONEY', 'Mobile Money'), ('CARD', 'Debit/Credit Card')], default='BANK_TRANSFER', max_length=20)),
                ('payment_reference', models.CharField(blank=True, help_text='Bank transaction reference', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, help_text='Any notes about this salary payment', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='salaries_processed', to=settings.AUTH_USER_MODEL)),
                ('staff_member', models.ForeignKey(help_text='Staff member receiving salary', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'staff_salaries',
                'ordering': ['-salary_month', 'staff_member__full_name'],
                'indexes': [models.Index(fields=['salary_month'], name='staff_salar_salary__fd4457_idx'), models.Index(fields=['payment_status'], name='staff_salar_payment_0eedbd_idx'), models.Index(fields=['staff_member'], name='staff_salar_staff_m_465f5b_idx')],
                'unique_together': {('staff_member', 'salary_month')},
            },
        ),
        migrations.CreateModel(
            name='ExpenseRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('expense_number', models.CharField(help_text='Unique expense number (EXP20240904001)', max_length=20, unique=True)),
                ('description', models.CharField(help_text='Brief description of the expense', max_length=200)),
                ('detailed_description', models.TextField(blank=True, help_text='Detailed description of what was purchased/paid for', null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Total amount of the expense', max_digits=12)),
                ('vendor_name', models.CharField(blank=True, help_text='Name of supplier/vendor (optional)', max_length=100, null=True)),
                ('vendor_contact', models.CharField(blank=True, help_text='Vendor phone/email (optional)', max_length=100, null=True)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('BANK_TRANSFER', 'Bank Transfer'), ('CHEQUE', 'Cheque'), ('MOBILE_MONEY', 'Mobile Money'), ('CARD', 'Debit/Credit Card')], default='CASH', max_length=20)),
                ('payment_reference', models.CharField(blank=True, help_text='Receipt number, transaction ID, etc.', max_length=100, null=True)),
                ('expense_status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('PAID', 'Paid'), ('REJECTED', 'Rejected')], default='PENDING', max_length=15)),
                ('expense_date', models.DateField(help_text='Date when expense was incurred')),
                ('payment_date', models.DateField(blank=True, help_text='Date when payment was made', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='Admin who approved this expense', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='expenses_approved', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(help_text='What type of expense this is', on_delete=django.db.models.deletion.PROTECT, to='finance.expensecategory')),
                ('paid_by', models.ForeignKey(blank=True, help_text='Staff member who processed payment', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='expenses_paid', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(help_text='Staff member who requested this expense', on_delete=django.db.models.deletion.PROTECT, related_name='expenses_requested', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'expense_records',
                'ordering': ['-expense_date', '-created_at'],
                'indexes': [models.Index(fields=['expense_status'], name='expense_rec_expense_3cfa4b_idx'), models.Index(fields=['expense_date'], name='expense_rec_expense_deb5c7_idx'), models.Index(fields=['category'], name='expense_rec_categor_475b12_idx'), models.Index(fields=['requested_by'], name='expense_rec_request_6e01ee_idx')],
            },
        ),
    ]
