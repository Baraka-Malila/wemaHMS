# Generated by Django 4.2.7 on 2025-09-29 15:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('patients', '0004_add_occupation_and_vitals'),
        ('finance', '0004_populate_expense_categories'),
    ]

    operations = [
        migrations.CreateModel(
            name='RevenueRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('revenue_number', models.CharField(help_text='Unique revenue number (REV20240904001)', max_length=20, unique=True)),
                ('revenue_type', models.CharField(choices=[('FILE_FEE', 'File Fee (New Patient)'), ('CONSULTATION', 'Doctor Consultation'), ('LAB_TEST', 'Laboratory Test'), ('MEDICATION', 'Medication Sale'), ('PROCEDURE', 'Medical Procedure'), ('ADMISSION', 'Ward Admission'), ('OTHER', 'Other Revenue')], help_text='Type of revenue/service', max_length=20)),
                ('description', models.CharField(help_text='Description of the service/revenue', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount received', max_digits=12)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('MOBILE_MONEY', 'Mobile Money'), ('CARD', 'Debit/Credit Card'), ('BANK_TRANSFER', 'Bank Transfer')], default='CASH', max_length=20)),
                ('payment_reference', models.CharField(blank=True, help_text='Receipt number, transaction ID, etc.', max_length=100, null=True)),
                ('revenue_date', models.DateField(default=django.utils.timezone.now, help_text='Date when revenue was collected')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('collected_by', models.ForeignKey(help_text='Staff member who collected the payment', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, help_text='Patient this revenue is related to (if applicable)', null=True, on_delete=django.db.models.deletion.PROTECT, to='patients.patient')),
            ],
            options={
                'db_table': 'revenue_records',
                'ordering': ['-revenue_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServicePayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_id', models.CharField(help_text='Patient ID (PAT123)', max_length=20)),
                ('patient_name', models.CharField(help_text='Patient name for quick reference', max_length=100)),
                ('service_type', models.CharField(choices=[('FILE_FEE', 'Patient File Fee'), ('CONSULTATION', 'Doctor Consultation'), ('LAB_TEST', 'Laboratory Test'), ('MEDICATION', 'Medication/Pharmacy'), ('NURSING', 'Nursing Service'), ('WARD', 'Ward/Admission'), ('PROCEDURE', 'Medical Procedure'), ('OTHER', 'Other Service')], max_length=20)),
                ('service_name', models.CharField(help_text='Name of the service provided', max_length=200)),
                ('reference_id', models.CharField(blank=True, help_text='Reference to consultation_id, lab_request_id, etc.', max_length=50, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount in TZS', max_digits=10)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('MOBILE_MONEY', 'Mobile Money'), ('BANK_TRANSFER', 'Bank Transfer'), ('INSURANCE', 'Insurance'), ('CREDIT', 'Credit/Deferred')], default='CASH', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Payment Pending'), ('PAID', 'Payment Completed'), ('REFUNDED', 'Payment Refunded'), ('WAIVED', 'Payment Waived')], default='PENDING', max_length=10)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Payment notes or special instructions', null=True)),
                ('receipt_number', models.CharField(blank=True, help_text='Receipt or transaction number', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_by', models.ForeignKey(blank=True, help_text='Staff who processed the payment', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payments_processed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'service_payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='dailybalance',
            name='approved_by',
        ),
        migrations.RemoveField(
            model_name='dailybalance',
            name='closed_by',
        ),
        migrations.RemoveField(
            model_name='patientbill',
            name='created_by',
        ),
        migrations.DeleteModel(
            name='BillLineItem',
        ),
        migrations.DeleteModel(
            name='DailyBalance',
        ),
        migrations.DeleteModel(
            name='PatientBill',
        ),
        migrations.AddIndex(
            model_name='servicepayment',
            index=models.Index(fields=['patient_id'], name='service_pay_patient_53a796_idx'),
        ),
        migrations.AddIndex(
            model_name='servicepayment',
            index=models.Index(fields=['service_type', 'status'], name='service_pay_service_e8fb2a_idx'),
        ),
        migrations.AddIndex(
            model_name='servicepayment',
            index=models.Index(fields=['status', '-created_at'], name='service_pay_status_d79984_idx'),
        ),
        migrations.AddIndex(
            model_name='servicepayment',
            index=models.Index(fields=['payment_date'], name='service_pay_payment_3ffc00_idx'),
        ),
        migrations.AddIndex(
            model_name='revenuerecord',
            index=models.Index(fields=['revenue_date'], name='revenue_rec_revenue_c0caf2_idx'),
        ),
        migrations.AddIndex(
            model_name='revenuerecord',
            index=models.Index(fields=['revenue_type'], name='revenue_rec_revenue_7b9c63_idx'),
        ),
        migrations.AddIndex(
            model_name='revenuerecord',
            index=models.Index(fields=['patient'], name='revenue_rec_patient_e10dbe_idx'),
        ),
    ]
