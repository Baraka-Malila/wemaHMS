# Generated by Django during migration

from django.db import migrations


def populate_expense_categories(apps, schema_editor):
    """
    Populate initial expense categories for hospital management.
    Simplified categories without complex vendor management.
    """
    ExpenseCategory = apps.get_model('finance', 'ExpenseCategory')
    User = apps.get_model('auth_portal', 'User')
    
    # Get the first admin user for created_by field
    admin_user = User.objects.filter(role='ADMIN').first()
    if not admin_user:
        # Skip if no admin user exists yet
        return
    
    categories = [
        # Staff & Payroll
        {
            'name': 'Staff Salaries',
            'category_type': 'STAFF',
            'description': 'Monthly salaries for all hospital staff',
            'monthly_budget': 25000000.00,  # 25M TZS
        },
        {
            'name': 'Staff Allowances',
            'category_type': 'STAFF',
            'description': 'Transport, medical, housing allowances for staff',
            'monthly_budget': 5000000.00,  # 5M TZS
        },
        {
            'name': 'Overtime Payments',
            'category_type': 'STAFF',
            'description': 'Overtime and emergency duty payments',
            'monthly_budget': 2000000.00,  # 2M TZS
        },
        
        # Medical Supplies
        {
            'name': 'Medications & Drugs',
            'category_type': 'MEDICAL',
            'description': 'Purchase of medications and pharmaceutical supplies',
            'monthly_budget': 8000000.00,  # 8M TZS
        },
        {
            'name': 'Medical Equipment',
            'category_type': 'MEDICAL',
            'description': 'Medical devices, instruments, and equipment',
            'monthly_budget': 3000000.00,  # 3M TZS
        },
        {
            'name': 'Lab Supplies',
            'category_type': 'MEDICAL',
            'description': 'Laboratory reagents, test kits, and consumables',
            'monthly_budget': 2500000.00,  # 2.5M TZS
        },
        
        # Utilities & Services
        {
            'name': 'Electricity Bills',
            'category_type': 'UTILITIES',
            'description': 'Monthly electricity and power costs',
            'monthly_budget': 1500000.00,  # 1.5M TZS
        },
        {
            'name': 'Water Bills',
            'category_type': 'UTILITIES',
            'description': 'Water and sewerage services',
            'monthly_budget': 300000.00,  # 300K TZS
        },
        {
            'name': 'Internet & Phone',
            'category_type': 'UTILITIES',
            'description': 'Telecommunications and internet services',
            'monthly_budget': 200000.00,  # 200K TZS
        },
        {
            'name': 'Cleaning Services',
            'category_type': 'UTILITIES',
            'description': 'Hospital cleaning and sanitation services',
            'monthly_budget': 800000.00,  # 800K TZS
        },
        
        # Equipment & Maintenance
        {
            'name': 'Equipment Maintenance',
            'category_type': 'EQUIPMENT',
            'description': 'Repair and maintenance of medical equipment',
            'monthly_budget': 1000000.00,  # 1M TZS
        },
        {
            'name': 'Building Maintenance',
            'category_type': 'EQUIPMENT',
            'description': 'Building repairs, painting, and infrastructure',
            'monthly_budget': 1500000.00,  # 1.5M TZS
        },
        
        # Office Supplies
        {
            'name': 'Office Supplies',
            'category_type': 'OFFICE',
            'description': 'Stationery, papers, office consumables',
            'monthly_budget': 300000.00,  # 300K TZS
        },
        {
            'name': 'IT & Software',
            'category_type': 'OFFICE',
            'description': 'Software licenses, IT support, computers',
            'monthly_budget': 500000.00,  # 500K TZS
        },
        
        # Transport & Fuel
        {
            'name': 'Fuel & Vehicle Costs',
            'category_type': 'TRANSPORT',
            'description': 'Ambulance fuel, vehicle maintenance, transport',
            'monthly_budget': 600000.00,  # 600K TZS
        },
        
        # Training & Development
        {
            'name': 'Staff Training',
            'category_type': 'TRAINING',
            'description': 'Medical training, workshops, conferences',
            'monthly_budget': 1000000.00,  # 1M TZS
        },
        
        # Other Expenses
        {
            'name': 'Emergency Expenses',
            'category_type': 'OTHER',
            'description': 'Unexpected and emergency operational costs',
            'monthly_budget': 1000000.00,  # 1M TZS
        },
        {
            'name': 'Legal & Compliance',
            'category_type': 'OTHER',
            'description': 'Legal fees, licenses, regulatory compliance',
            'monthly_budget': 500000.00,  # 500K TZS
        },
    ]
    
    for category_data in categories:
        ExpenseCategory.objects.get_or_create(
            name=category_data['name'],
            defaults={
                'category_type': category_data['category_type'],
                'description': category_data['description'],
                'monthly_budget': category_data['monthly_budget'],
                'is_active': True,
                'created_by': admin_user,
            }
        )


def reverse_populate_expense_categories(apps, schema_editor):
    """Remove the populated expense categories."""
    ExpenseCategory = apps.get_model('finance', 'ExpenseCategory')
    ExpenseCategory.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0003_expensecategory_staffsalary_expenserecord'),
        ('auth_portal', '0001_initial'),  # Ensure user model exists
    ]

    operations = [
        migrations.RunPython(
            populate_expense_categories,
            reverse_populate_expense_categories,
        ),
    ]
