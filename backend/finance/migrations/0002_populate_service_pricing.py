# Generated by Django 5.1.2 on 2025-09-07 15:08

from django.db import migrations
from decimal import Decimal


def populate_service_pricing(apps, schema_editor):
    """
    Populate ServicePricing with standard hospital services.
    This creates a centralized pricing system for all departments.
    """
    ServicePricing = apps.get_model('finance', 'ServicePricing')
    User = apps.get_model('auth_portal', 'User')
    
    # Get admin user for created_by field
    admin_user = User.objects.filter(role='ADMIN').first()
    if not admin_user:
        # Create a system admin user for data migration
        admin_user = User.objects.create(
            email='system@wema-hms.com',
            full_name='System Admin',
            phone_number='+255000000000',
            role='ADMIN',
            gender='OTHER',
            is_approved=True,
            is_active=True
        )
    
    # Standard hospital services
    services = [
        # Reception Services
        {
            'service_name': 'Patient File Creation Fee',
            'service_code': 'RECEPTION_FILE',
            'service_category': 'OTHER',
            'standard_price': Decimal('2000.00'),
            'department': 'RECEPTION',
            'description': 'One-time fee for creating new patient file'
        },
        
        # Doctor Consultation Services
        {
            'service_name': 'General Consultation',
            'service_code': 'CONSULT_GENERAL',
            'service_category': 'CONSULTATION',
            'standard_price': Decimal('50000.00'),
            'emergency_price': Decimal('75000.00'),
            'department': 'DOCTOR',
            'description': 'General doctor consultation and examination',
            'duration_minutes': 30
        },
        {
            'service_name': 'Specialist Consultation',
            'service_code': 'CONSULT_SPECIALIST',
            'service_category': 'CONSULTATION',
            'standard_price': Decimal('100000.00'),
            'emergency_price': Decimal('150000.00'),
            'department': 'DOCTOR',
            'description': 'Specialist doctor consultation',
            'duration_minutes': 45
        },
        {
            'service_name': 'Follow-up Consultation',
            'service_code': 'CONSULT_FOLLOWUP',
            'service_category': 'CONSULTATION',
            'standard_price': Decimal('30000.00'),
            'department': 'DOCTOR',
            'description': 'Follow-up visit for existing patients',
            'duration_minutes': 15
        },
        
        # Laboratory Services
        {
            'service_name': 'Complete Blood Count (CBC)',
            'service_code': 'LAB_CBC',
            'service_category': 'LAB_TEST',
            'standard_price': Decimal('25000.00'),
            'emergency_price': Decimal('35000.00'),
            'department': 'LAB',
            'description': 'Complete blood count analysis'
        },
        {
            'service_name': 'Blood Sugar Test',
            'service_code': 'LAB_BLOOD_SUGAR',
            'service_category': 'LAB_TEST',
            'standard_price': Decimal('15000.00'),
            'emergency_price': Decimal('20000.00'),
            'department': 'LAB',
            'description': 'Blood glucose level test'
        },
        {
            'service_name': 'Malaria Test',
            'service_code': 'LAB_MALARIA',
            'service_category': 'LAB_TEST',
            'standard_price': Decimal('10000.00'),
            'emergency_price': Decimal('15000.00'),
            'department': 'LAB',
            'description': 'Malaria rapid diagnostic test'
        },
        {
            'service_name': 'Urine Analysis',
            'service_code': 'LAB_URINE',
            'service_category': 'LAB_TEST',
            'standard_price': Decimal('20000.00'),
            'department': 'LAB',
            'description': 'Complete urine analysis'
        },
        {
            'service_name': 'X-Ray Chest',
            'service_code': 'LAB_XRAY_CHEST',
            'service_category': 'LAB_TEST',
            'standard_price': Decimal('40000.00'),
            'emergency_price': Decimal('60000.00'),
            'department': 'LAB',
            'description': 'Chest X-ray examination'
        },
        
        # Nursing Services
        {
            'service_name': 'Injection Administration',
            'service_code': 'NURSING_INJECTION',
            'service_category': 'NURSING',
            'standard_price': Decimal('5000.00'),
            'department': 'NURSING',
            'description': 'Administration of injections',
            'duration_minutes': 10
        },
        {
            'service_name': 'Wound Dressing',
            'service_code': 'NURSING_WOUND_DRESS',
            'service_category': 'NURSING',
            'standard_price': Decimal('15000.00'),
            'department': 'NURSING',
            'description': 'Wound cleaning and dressing',
            'duration_minutes': 20
        },
        {
            'service_name': 'Blood Pressure Monitoring',
            'service_code': 'NURSING_BP_MONITOR',
            'service_category': 'NURSING',
            'standard_price': Decimal('3000.00'),
            'department': 'NURSING',
            'description': 'Blood pressure measurement and monitoring'
        },
        {
            'service_name': 'Ward Bed (per day)',
            'service_code': 'WARD_BED_DAY',
            'service_category': 'WARD',
            'standard_price': Decimal('25000.00'),
            'department': 'NURSING',
            'description': 'Daily ward bed charges'
        },
        
        # Emergency Services
        {
            'service_name': 'Emergency Room Fee',
            'service_code': 'EMERGENCY_ROOM',
            'service_category': 'EMERGENCY',
            'standard_price': Decimal('100000.00'),
            'department': 'DOCTOR',
            'description': 'Emergency room admission and initial assessment',
            'requires_approval': True
        },
        
        # Common Medications (examples)
        {
            'service_name': 'Paracetamol 500mg',
            'service_code': 'MED_PARACETAMOL',
            'service_category': 'MEDICATION',
            'standard_price': Decimal('500.00'),
            'department': 'PHARMACY',
            'description': 'Paracetamol 500mg tablet'
        },
        {
            'service_name': 'Amoxicillin 500mg',
            'service_code': 'MED_AMOXICILLIN',
            'service_category': 'MEDICATION',
            'standard_price': Decimal('1000.00'),
            'department': 'PHARMACY',
            'description': 'Amoxicillin 500mg antibiotic capsule'
        },
        {
            'service_name': 'ORS Sachet',
            'service_code': 'MED_ORS_SACHET',
            'service_category': 'MEDICATION',
            'standard_price': Decimal('300.00'),
            'department': 'PHARMACY',
            'description': 'Oral Rehydration Salt sachet'
        },
    ]
    
    # Create all services
    for service_data in services:
        ServicePricing.objects.get_or_create(
            service_code=service_data['service_code'],
            defaults={
                **service_data,
                'created_by': admin_user,
                'is_active': True
            }
        )


def reverse_populate_service_pricing(apps, schema_editor):
    """
    Remove all service pricing records.
    """
    ServicePricing = apps.get_model('finance', 'ServicePricing')
    ServicePricing.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            populate_service_pricing,
            reverse_populate_service_pricing
        ),
    ]
